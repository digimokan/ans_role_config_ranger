# vim: set filetype=python:
# ANSIBLE-MANAGED CONFIGURATION FILE
# Sourcing: ranger sources this on startup
# Purpose:  cmds to perform custom actions in ranger

import os
from ranger.api.commands import *

class fzf_select(Command):
  """
  :fzf_select
  find a file or dir using fzf
  """
  def execute(self):
    import subprocess
    import os.path

    command="{{ ranger_fzf_cmd }} --exact --no-sort"

    fzf = self.fm.execute_command(command, stdout=subprocess.PIPE)
    stdout, stderr = fzf.communicate()
    if fzf.returncode == 0:
      fzf_file = os.path.abspath(stdout.decode('utf-8').rstrip('\n'))
      if os.path.isdir(fzf_file):
        self.fm.cd(fzf_file)
      else:
        self.fm.select_file(fzf_file)

# class fzf_select_dir(Command):
#   """
#   :fzf_select_dir
#   find a dir using fzf
#   """
#   def execute(self):
#     import subprocess
#     import os.path

#     command="rg --files --smart-case --hidden --no-ignore --glob \"!.git/*\" --null 2> /dev/null | xargs -0 dirname | sort -u | fzf"

#     fzf = self.fm.execute_command(command, stdout=subprocess.PIPE)
#     stdout, stderr = fzf.communicate()
#     if fzf.returncode == 0:
#       fzf_file = os.path.abspath(stdout.decode('utf-8').rstrip('\n'))
#       if os.path.isdir(fzf_file):
#         self.fm.cd(fzf_file)
#       else:
#         self.fm.select_file(fzf_file)

