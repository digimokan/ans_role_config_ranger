#!/usr/bin/env bash
# vim: set filetype=bash:
# ORIGINAL: copied from system /usr/share/doc/ranger/config/scope.sh
# PURPOSE:  show full preview of media files in terminal in ranger
# SOURCING:
#   1. ranger sources this *instead of* system scope.sh.
#   2. if option `use_preview_script` is `true`, this script will run.
#   3. ANSI color codes are supported.

set -o noclobber -o noglob -o nounset -o pipefail
IFS=$'\n'

## SCRIPT ARGUMENTS
FILE_PATH="${1}"         # Full path of the highlighted file
PV_WIDTH="${2}"          # Width of the preview pane (number of fitting characters)
PV_HEIGHT="${3}"         # Height of the preview pane (number of fitting characters)
IMAGE_CACHE_PATH="${4}"  # Full path that should be used to cache image preview
PV_IMAGE_ENABLED="${5}"  # 'True' if image previews are enabled, 'False' otherwise.

## GLOBAL VARS
MIMETYPE="$( file --dereference --brief --mime-type -- "${FILE_PATH}" )"

exit_and_display_stdout_as_preview() {
 exit 0
}

exit_and_do_not_display_preview() {
 exit 1
}

exit_and_display_file_as_text() {
 exit 2
}

exit_and_do_not_reload_if_width_changes() {
 exit 3
}

exit_and_do_not_reload_if_height_changes() {
 exit 4
}

exit_and_never_reload() {
 exit 5
}

exit_and_display_image_cache_path_file() {
 exit 6
}

exit_and_display_file_as_image() {
 exit 7
}

handle_image() {
  case "${MIMETYPE}" in
    image/*)
      exit_and_display_file_as_image;;
  esac
}

handle_mime() {
  case "${MIMETYPE}" in
    {{ mime_type_text }} )
      {{ preview_text_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_rtf }} )
      {{ preview_rtf_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_opendoc_odt }} )
      {{ preview_odt_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_opendoc_ods }} )
      {{ preview_ods_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_opendoc_odp }} )
      {{ preview_odp_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_ms_word_doc }} )
      {{ preview_doc_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_ms_word_docx }} )
      {{ preview_docx_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_ms_excel_xls }} )
      {{ preview_xls_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_ms_excel_xlsx }} )
      {{ preview_xlsx_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_epub }} )
      {{ preview_epub_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_tar }} )
      {{ preview_tar_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_gzip }} )
      {{ preview_gzip_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_zip }} )
      {{ preview_zip_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_xz }} )
      {{ preview_xz_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;

    {{ mime_type_7zip }} )
      {{ preview_7zip_file_cmd }} "${FILE_PATH}" && exit_and_never_reload
      exit_and_do_not_display_preview;;
  esac
}

if [[ "${PV_IMAGE_ENABLED}" == 'True' ]]; then
  handle_image
fi
handle_mime

exit_and_do_not_display_preview

